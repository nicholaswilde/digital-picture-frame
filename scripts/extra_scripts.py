import subprocess
import os

Import("env")

# --- Get Git Version ---
def get_git_version():
    try:
        result = subprocess.run(
            ["git", "describe", "--dirty", "--always", "--tags"],
            capture_output=True,
            text=True,
            check=True
        )
        return result.stdout.strip()
    except Exception as e:
        print(f"Git version check failed: {e}")
        return "0.0.0-dev"

firmware_version = get_git_version()
print(f"Firmware Version: {firmware_version}")
env.Append(BUILD_FLAGS=[f'-DAPP_VERSION=\\"{firmware_version}\\"'])

# --- Catppuccin Theme Generation ---
palettes = {
    'mocha': {
        'ROSEWATER': '0xf71b', 'FLAMINGO': '0xf679', 'PINK': '0xf61c', 'MAUVE': '0xcd3e',
        'RED': '0xf455', 'MAROON': '0xed15', 'PEACH': '0xfd90', 'YELLOW': '0xff15',
        'GREEN': '0xa714', 'TEAL': '0x971a', 'SKY': '0x8efd', 'SAPPHIRE': '0x763d',
        'BLUE': '0x8dbf', 'LAVENDER': '0xb5ff', 'TEXT': '0xcebe', 'BASE': '0x18e5',
        'CRUST': '0x1083'
    },
    'macchiato': {
        'ROSEWATER': '0xf6da', 'FLAMINGO': '0xf638', 'PINK': '0xf5fc', 'MAUVE': '0xc51e',
        'RED': '0xec32', 'MAROON': '0xecd4', 'PEACH': '0xf54f', 'YELLOW': '0xeeb3',
        'GREEN': '0xa6d2', 'TEAL': '0x8eb9', 'SKY': '0x96bc', 'SAPPHIRE': '0x7e3c',
        'BLUE': '0x8d7e', 'LAVENDER': '0xb5ff', 'TEXT': '0xce9e', 'BASE': '0x2127',
        'CRUST': '0x18c4'
    },
    'frappe': {
        'ROSEWATER': '0xf6b9', 'FLAMINGO': '0xedf7', 'PINK': '0xf5dc', 'MAUVE': '0xccfc',
        'RED': '0xe410', 'MAROON': '0xecd3', 'PEACH': '0xecee', 'YELLOW': '0xe652',
        'GREEN': '0xa691', 'TEAL': '0x8657', 'SKY': '0x9e9b', 'SAPPHIRE': '0x861b',
        'BLUE': '0x8d5d', 'LAVENDER': '0xbdde', 'TEXT': '0xc69e', 'BASE': '0x31a8',
        'CRUST': '0x2126'
    },
    'latte': {
        'ROSEWATER': '0xde4f', 'FLAMINGO': '0xddce', 'PINK': '0xeade', 'MAUVE': '0x89ff',
        'RED': '0xd067', 'MAROON': '0xe24a', 'PEACH': '0xfb01', 'YELLOW': '0xde43',
        'GREEN': '0x4505', 'TEAL': '0x1493', 'SKY': '0x053c', 'SAPPHIRE': '0x24fb',
        'BLUE': '0x1b3e', 'LAVENDER': '0x745f', 'TEXT': '0x4a6d', 'BASE': '0xef7e',
        'CRUST': '0xde1d'
    }
}

# Get theme from platformio.ini, default to 'mocha'
theme_name = env.GetProjectOption('custom_catppuccin_theme', 'mocha').lower()
if theme_name not in palettes:
    print(f"Warning: Catppuccin theme '{theme_name}' not found. Falling back to 'mocha'.")
    theme_name = 'mocha'

print(f"Selected Catppuccin theme: {theme_name}")
palette = palettes[theme_name]

# Generate header file content
header_content = """\
#ifndef CATPPUCCIN_COLORS_H
#define CATPPUCCIN_COLORS_H

// Auto-generated by PlatformIO from Catppuccin theme '{}'

""".format(theme_name)

for color_name, color_value in palette.items():
    header_content += f"#define CATPPUCCIN_{color_name} {color_value}\n"

header_content += "\n#endif // CATPPUCCIN_COLORS_H\n"

# Write to header file
project_dir = env.subst("$PROJECT_DIR")
header_path = os.path.join(project_dir, 'include', 'catppuccin_colors.h')
with open(header_path, 'w') as f:
    f.write(header_content)

print(f"Generated catppuccin_colors.h for theme '{theme_name}' at {header_path}")
