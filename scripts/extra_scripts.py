import subprocess
import os

Import("env")

# --- Get Git Version ---
def get_git_version():
    try:
        result = subprocess.run(
            ["git", "describe", "--dirty", "--always", "--tags"],
            capture_output=True,
            text=True,
            check=True
        )
        return result.stdout.strip()
    except Exception as e:
        print(f"Git version check failed: {e}")
        return "0.0.0-dev"

firmware_version = get_git_version()
print(f"Firmware Version: {firmware_version}")
env.Append(BUILD_FLAGS=[f'-DAPP_VERSION=\\"{firmware_version}\\"'])

# --- Catppuccin Theme Generation ---
palettes = {
    'mocha': {
        'ROSEWATER': '0xF73B', 'FLAMINGO': '0xF67A', 'PINK': '0xF61C', 'MAUVE': '0xCD5F',
        'RED': '0xF455', 'MAROON': '0xEBB0', 'PEACH': '0xF8A8', 'YELLOW': '0xF72D',
        'GREEN': '0xA72C', 'TEAL': '0x9771', 'SKY': '0x867E', 'SAPPHIRE': '0x755E',
        'BLUE': '0x853F', 'LAVENDER': '0xB57F', 'TEXT': '0xCCDE', 'BASE': '0x18E5',
        'CRUST': '0x10A3'
    },
    'macchiato': {
        'ROSEWATER': '0xF73B', 'FLAMINGO': '0xF67A', 'PINK': '0xF61C', 'MAUVE': '0xCD5F',
        'RED': '0xF126', 'MAROON': '0xE4AF', 'PEACH': '0xF468', 'YELLOW': '0xF6E8',
        'GREEN': '0xA668', 'TEAL': '0x96B0', 'SKY': '0x959D', 'SAPPHIRE': '0x853D',
        'BLUE': '0x84DF', 'LAVENDER': '0xB53F', 'TEXT': '0xCE7E', 'BASE': '0x2127',
        'CRUST': '0x10A2'
    },
    'frappe': {
        'ROSEWATER': '0xF77B', 'FLAMINGO': '0xF69A', 'PINK': '0xF61C', 'MAUVE': '0xCAFF',
        'RED': '0xE948', 'MAROON': '0xE52E', 'PEACH': '0xEF08', 'YELLOW': '0xEEC8',
        'GREEN': '0xA5A9', 'TEAL': '0x9E2D', 'SKY': '0x8D5E', 'SAPPHIRE': '0x7D3D',
        'BLUE': '0x8C9E', 'LAVENDER': '0xB97E', 'TEXT': '0xD5DA', 'BASE': '0x3186',
        'CRUST': '0x2124'
    },
    'latte': {
        'ROSEWATER': '0xF77C', 'FLAMINGO': '0xF69B', 'PINK': '0xEA9B', 'MAUVE': '0x8C7F',
        'RED': '0xD20A', 'MAROON': '0xE2EB', 'PEACH': '0xFE69', 'YELLOW': '0xDFC8',
        'GREEN': '0x4549', 'TEAL': '0x156B', 'SKY': '0x059D', 'SAPPHIRE': '0x2479',
        'BLUE': '0x1C9F', 'LAVENDER': '0x743F', 'TEXT': '0x4A69', 'BASE': '0xEFE9',
        'CRUST': '0xD5EB'
    }
}

# Get theme from platformio.ini, default to 'mocha'
theme_name = env.GetProjectOption('custom_catppuccin_theme', 'mocha').lower()
if theme_name not in palettes:
    print(f"Warning: Catppuccin theme '{theme_name}' not found. Falling back to 'mocha'.")
    theme_name = 'mocha'

print(f"Selected Catppuccin theme: {theme_name}")
palette = palettes[theme_name]

# Generate header file content
header_content = """\
#ifndef CATPPUCCIN_COLORS_H
#define CATPPUCCIN_COLORS_H

// Auto-generated by PlatformIO from Catppuccin theme '{}'

""".format(theme_name)

for color_name, color_value in palette.items():
    header_content += f"#define CATPPUCCIN_{color_name} {color_value}\n"

header_content += "\n#endif // CATPPUCCIN_COLORS_H\n"

# Write to header file
project_dir = env.subst("$PROJECT_DIR")
header_path = os.path.join(project_dir, 'include', 'catppuccin_colors.h')
with open(header_path, 'w') as f:
    f.write(header_content)

print(f"Generated catppuccin_colors.h for theme '{theme_name}' at {header_path}")
